1
00:00:00,000 --> 00:00:03,700
はい皆さんこんにちは

2
00:00:03,700 --> 00:00:08,019
いきなりですが最近僕は副業として

3
00:00:08,019 --> 00:00:10,880
キャリコというアプリの開発に携わっています

4
00:00:10,880 --> 00:00:16,960
キャリコはAppleプラットフォームでの最高のカレンダー体験を目指したネイティブのアプリケーションです

5
00:00:16,960 --> 00:00:20,179
まだ開発中でリリースできていないんですが

6
00:00:20,179 --> 00:00:24,260
iOS、MacOS、複数のプラットフォーム向けに日々開発しています

7
00:00:24,260 --> 00:00:28,160
特徴的なのがその開発メンバーです

8
00:00:28,160 --> 00:00:33,079
タイムラボ株式会社 CEOの穂住さんという方がプロダクトマネージャーをしていて

9
00:00:33,079 --> 00:00:35,179
そして知っている人もいるかもしれません

10
00:00:35,179 --> 00:00:40,840
Mac OS Nativeという勉強会のコアメンバーであるぬくいさんがデザイナーとして関わっています

11
00:00:40,840 --> 00:00:44,600
そして同じくMac OS Nativeコアメンバーのうさぎまるさんが

12
00:00:44,600 --> 00:00:46,719
Mac OSアプリ開発を担当していて

13
00:00:46,719 --> 00:00:49,359
僕がiOSアプリの開発を担当している

14
00:00:49,359 --> 00:00:50,859
こういう座組で開発をしています

15
00:00:50,859 --> 00:00:56,340
今日はこのキャリコを題材にカスタムUIについて話をしていきたいと思っています

16
00:00:56,340 --> 00:01:00,280
この発表ではカスタムUIの定義として

17
00:01:00,280 --> 00:01:04,579
Appleが提供するAPIにはない表現で実現されたUIのことを

18
00:01:04,579 --> 00:01:06,579
カスタムUIというふうに呼びます

19
00:01:06,579 --> 00:01:10,739
実際キャリコにもこのカスタムUIはたくさん使われています

20
00:01:10,739 --> 00:01:13,319
ここの詳細は見なくて結構なんですが

21
00:01:13,319 --> 00:01:15,200
例えばこの上のナビゲーションバーとか

22
00:01:15,200 --> 00:01:19,040
下のツールバーといったものは全てカスタムUIになっています

23
00:01:19,040 --> 00:01:23,879
このカスタムUI単純に見た目を実現する

24
00:01:23,879 --> 00:01:25,439
実装するだけならまだしも

25
00:01:25,439 --> 00:01:29,140
本当の意味でカスタムUIを作り切るというのが難しいというのが

26
00:01:29,140 --> 00:01:30,599
今日の話の内容です

27
00:01:30,599 --> 00:01:34,739
ではここから実際にキャリコの中で実装した例

28
00:01:34,739 --> 00:01:36,760
実装しなかった例を使って

29
00:01:36,760 --> 00:01:39,859
カスタムUIについて紹介をしていきたいというふうに思います

30
00:01:39,859 --> 00:01:43,519
まず最初のカスタムUIの例として

31
00:01:43,519 --> 00:01:45,219
ナビゲーションバーのタイトルです

32
00:01:45,219 --> 00:01:47,640
このナビゲーションバーのタイトルは

33
00:01:47,640 --> 00:01:50,480
ラージスタイルのタイトルのような見た目をしていて

34
00:01:50,480 --> 00:01:52,859
下にスクロールすると引っ張られていきます

35
00:01:52,859 --> 00:01:57,640
そして逆に上にスクロールするとテーブルビューやコレクションビューのような

36
00:01:57,640 --> 00:01:59,519
セクションヘッダーのような動きをします

37
00:01:59,519 --> 00:02:02,819
ここから詳しく説明していきます

38
00:02:02,819 --> 00:02:07,219
カスタムUIならではの点として一つ目にこのアニメーションとしての

39
00:02:07,219 --> 00:02:09,319
ナビゲーションバーのタイトルのトランジションです

40
00:02:09,319 --> 00:02:13,780
今ここに注目って矢印書いている場所にちょっと注目してみてください

41
00:02:13,780 --> 00:02:17,199
このアニメーションは少しゆっくりにしているんですが

42
00:02:17,199 --> 00:02:19,759
トランジションがかかっていることがわかります

43
00:02:19,759 --> 00:02:24,180
ディゾルブでタイトルがじんわり出たり消えたりしていることが分かると思います

44
00:02:24,180 --> 00:02:27,020
標準のナビゲーションバータイトルも同様に

45
00:02:27,020 --> 00:02:30,199
iOS標準のナビゲーションバータイトルも同様にディゾルブがかかっているので

46
00:02:30,199 --> 00:02:32,680
標準UIに慣れ親しんでいるユーザーが

47
00:02:32,680 --> 00:02:35,879
このカスタムUIに対して不自然に感じないようにということで

48
00:02:35,879 --> 00:02:38,620
ここにわざとトランジションのディゾルブを入れています

49
00:02:38,620 --> 00:02:41,539
アクセシビリティにもこだわっています

50
00:02:41,539 --> 00:02:46,560
ここでは透明度を下げるブラをやめたことについて説明をします

51
00:02:46,560 --> 00:02:50,919
ナビゲーションバーの背景に注目してみてください

52
00:02:50,919 --> 00:02:53,259
表示のナビゲーションバータイトルでは

53
00:02:53,259 --> 00:02:55,319
このバーの背景にブラーをかけて

54
00:02:55,319 --> 00:02:58,719
裏のスクロールビューがうっすら透けて見えるようになっています

55
00:02:58,719 --> 00:03:01,939
ということでキャリコでもこれ全部カスタムUIなんですけど

56
00:03:01,939 --> 00:03:05,520
わざとそこを模倣してブラーをかけています

57
00:03:05,520 --> 00:03:08,560
ただ通常時はそれでいいんですけど

58
00:03:08,560 --> 00:03:10,560
アクセシビリティの設定として

59
00:03:10,560 --> 00:03:13,419
画面表示とテキストサイズというものがあります

60
00:03:13,419 --> 00:03:15,060
ここですね

61
00:03:15,060 --> 00:03:23,139
これを有効にすると標準のナビゲーションバーの背景がブラーがかかっていたものがブラーが取れるというような挙動をするんですね

62
00:03:23,139 --> 00:03:28,780
なので当然標準がやっているのでカスタムUIであるキャリコもそのナビゲーションバーの挙動を模倣します

63
00:03:28,780 --> 00:03:36,419
さっきまではブラーがかかっていたところが今回は今何もかかっていなくて白い背景になっていることがわかると思います

64
00:03:36,419 --> 00:03:40,639
左右に見比べるとよりはっきりわかるんじゃないかなと思います

65
00:03:41,199 --> 00:03:46,659
こうすることを透明度を下げるのオンオフでナビゲーションバーのブラの違いというのが分かりやすくなります

66
00:03:46,659 --> 00:03:50,360
このあたり標準APIだったらもちろん勝手にやってくれるんですけど

67
00:03:50,360 --> 00:03:55,599
カスタムUIでやるんだったら自分らでこのあたりまでちゃんとケアしようということでここまでやっています

68
00:03:55,599 --> 00:03:58,879
次の例としてシートも紹介します

69
00:03:58,879 --> 00:04:03,740
キャリコではイベント新規作成のためにカスタムのシートを作っています

70
00:04:03,740 --> 00:04:06,919
これ一見普通のシートにもしかしたら見えるかもしれませんが

71
00:04:06,919 --> 00:04:11,659
下にスワイプしたときにメールアプリのようにスタックする仕組みになっています

72
00:04:11,659 --> 00:04:15,379
当然標準のAPIではこのようなことは実現できないので

73
00:04:15,379 --> 00:04:17,500
これは全てカスタムUIです

74
00:04:17,500 --> 00:04:23,300
もともとのビューが若干後ろに下がって黒い影が裏についているのとか

75
00:04:23,300 --> 00:04:26,560
この辺り全て自前で実装しています

76
00:04:26,560 --> 00:04:31,600
このシートについてのインタラクションとアクセシビリティという観点で

77
00:04:31,600 --> 00:04:33,300
グラバーというものを紹介します

78
00:04:33,300 --> 00:04:38,920
グラバーというのはここの灰色のカプセル型のUIコンポーネントのことを指します

79
00:04:38,920 --> 00:04:42,600
Human Interface Guidelineのシートのセクションで

80
00:04:42,600 --> 00:04:44,579
グラバーについてこのように説明があります

81
00:04:44,579 --> 00:04:48,779
グラバーをタップするとディテントを順番に選択できます

82
00:04:48,779 --> 00:04:51,220
グラバーはボイスオーバーにも対応しており

83
00:04:51,220 --> 00:04:54,060
ユーザーは画面を見ずにシートのサイズを変更できます

84
00:04:54,060 --> 00:04:57,259
Human Interface Guidelineがそう言っているので

85
00:04:57,259 --> 00:04:59,100
キャリコでもそのように実装しています

86
00:04:59,100 --> 00:05:01,240
さっきのグラバーをタップすると

87
00:05:01,240 --> 00:05:04,860
下に小さくスタックするようにサイズが変わっていることが分かると思います

88
00:05:04,860 --> 00:05:07,300
このカスタムのシートっていうのは

89
00:05:07,300 --> 00:05:09,439
いろんなアプリがそれぞれカスタムのシート

90
00:05:09,439 --> 00:05:11,379
模倣して作っている

91
00:05:11,379 --> 00:05:14,060
それぞれの独自のシートを作っていると思っていて

92
00:05:14,060 --> 00:05:16,439
グラバーみたいなものもよく見かけるんですけど

93
00:05:16,439 --> 00:05:18,620
多くの場合そのグラバーをタップしても

94
00:05:18,620 --> 00:05:20,160
時点とが変わったりはしてくれません

95
00:05:20,160 --> 00:05:22,879
これはHuman Interface Guidelineの観点から言うと

96
00:05:22,879 --> 00:05:24,920
不適切というふうに言えます

97
00:05:24,920 --> 00:05:29,399
ここからはキャリコで逆に実装しなかった例として

98
00:05:29,399 --> 00:05:31,240
日付ピッカーというところも紹介します

99
00:05:31,240 --> 00:05:35,579
このよくある日付や時間を選択するピッカーのことです

100
00:05:35,579 --> 00:05:40,379
キャリコではこのコンパクト時の文字のフォントっていうのを

101
00:05:40,379 --> 00:05:43,860
そのアプリの世界観にあったものに変えたいという話がありました

102
00:05:43,860 --> 00:05:48,259
ただ実はこのフォントを変更するというAPIが

103
00:05:48,259 --> 00:05:49,800
Appleから提供されておらず

104
00:05:49,800 --> 00:05:52,379
もしやるんだったらここをカスタムUIとして

105
00:05:52,379 --> 00:05:54,800
さっきのピッカーが出るものとかを実装

106
00:05:54,800 --> 00:05:56,540
模倣して実装する必要がありました

107
00:05:56,540 --> 00:05:59,439
ポップオーバーとかを使えば実現できる気もします

108
00:05:59,439 --> 00:06:02,839
ただちょっとどういう挙動をするのかわからないので

109
00:06:02,839 --> 00:06:05,980
この日付ピッカーがどうなっているのかというのを詳しく見てみます

110
00:06:05,980 --> 00:06:10,779
まず最初に一番身近な例として指でタップした場合です

111
00:06:10,779 --> 00:06:16,199
タップするとピッカーが出てきて時間を選ぶというようなことができるようになっています

112
00:06:16,199 --> 00:06:22,339
iPadOSでトラックパッドとキーボードを使った場合も見てみます

113
00:06:22,339 --> 00:06:25,160
このようにトラックパッドで選択することができて

114
00:06:25,160 --> 00:06:29,560
キーボードで文字を入力することで時間を直接指定することができます

115
00:06:29,560 --> 00:06:34,819
さらに時間と分を分けて選択して時間だけ入力したり

116
00:06:34,819 --> 00:06:38,579
分だけ入力したりといったようなこともできるようになっています

117
00:06:38,579 --> 00:06:42,839
さらに厄介なのが地域がアメリカの場合です

118
00:06:42,839 --> 00:06:49,639
時間の前に午前と午後という情報が追加されています

119
00:06:49,639 --> 00:06:52,439
これ自体も選択することができて

120
00:06:52,439 --> 00:06:58,079
キーボードの上下ボタンなどを使って午前と午後を切り替えるというようなインタラクションになっています

121
00:06:58,079 --> 00:07:00,899
さらに言語を英語にしてみます

122
00:07:00,899 --> 00:07:05,120
するとさっきの午前と午後という情報は時間の後ろに表示されるようになります

123
00:07:05,120 --> 00:07:10,579
このように言語に応じてUIを出す順番とかも出し分ける必要があります

124
00:07:10,579 --> 00:07:13,819
最後にApple Pencilの場合を見てみます

125
00:07:13,819 --> 00:07:20,439
Apple Pencilはスクリブルという機能で時間を直接手書きで入力することができるようになっています

126
00:07:20,439 --> 00:07:24,879
標準の日付ピッカーはこの辺りまで全てサポートしています

127
00:07:24,879 --> 00:07:29,439
ここまでの内容を踏まえてこれ全部やるっていう話です

128
00:07:29,439 --> 00:07:32,819
標準APIでこれらは全て自動で対応していて

129
00:07:32,819 --> 00:07:35,740
ユーザーはこの期待値ユーザーの期待値もこのレベルです

130
00:07:35,740 --> 00:07:39,040
今僕が把握する範囲を紹介しましたが

131
00:07:39,040 --> 00:07:41,579
おそらくまだまだ未確認の挙動はあると思っていて

132
00:07:41,579 --> 00:07:44,000
特定の地域特定の言語で組み合わせるときの

133
00:07:44,000 --> 00:07:45,699
エッジケースみたいなものも多そうです

134
00:07:45,699 --> 00:07:48,620
これら全てを対応するのはコストが高すぎるので

135
00:07:48,620 --> 00:07:49,720
やりたくないんですけど

136
00:07:49,720 --> 00:07:52,100
じゃあ我々のフォントを少し変えたいという

137
00:07:52,100 --> 00:07:54,000
ちょっとした要求のためだけに

138
00:07:54,000 --> 00:07:56,600
ユーザー体験を下げてしまうということになってしまいます

139
00:07:56,600 --> 00:07:58,720
これは良くないだろうということで

140
00:07:58,720 --> 00:08:01,160
キャリコではカスタムピッカーをやるのをやめて

141
00:08:01,160 --> 00:08:04,779
デザインを修正し標準APIをそのまま使用することで

142
00:08:04,779 --> 00:08:06,120
対応するという風になりました

143
00:08:06,120 --> 00:08:08,639
つまりカスタムUIにすることを断念しました

144
00:08:08,639 --> 00:08:12,920
ではここからカスタムUIを作るときに

145
00:08:12,920 --> 00:08:15,519
今具体的にいくつか例を見せましたが

146
00:08:15,519 --> 00:08:17,939
どういう点を確認するべきかということについて

147
00:08:17,939 --> 00:08:19,139
説明をしていきます

148
00:08:19,139 --> 00:08:22,199
ざっくり挙げるとアクセシビリティであったり

149
00:08:22,199 --> 00:08:25,660
iPadOSの対応とかアニメーション、ジェスチャー、インタラクション、パフォーマンス

150
00:08:25,660 --> 00:08:27,100
いろいろな観点があります

151
00:08:27,100 --> 00:08:29,839
まずはアクセシビリティから見ていきます

152
00:08:29,839 --> 00:08:34,000
アクセシビリティの中でも設定項目ってすごい多いんですけど

153
00:08:34,000 --> 00:08:36,419
開発者が特に気をつけた方がいいなと思うのが

154
00:08:36,419 --> 00:08:40,299
ボイスオーバー、ダイナミックタイプ、ボタンの形、オンオフラベル、透明度を下げる

155
00:08:40,299 --> 00:08:42,539
視差効果を減らすなどが挙げられます

156
00:08:42,539 --> 00:08:44,740
もちろんこれら以外にもたくさんあると思うので

157
00:08:44,740 --> 00:08:48,399
ぜひ皆さん自身でアクセシビリティの項目を一つ一つ見てみてください

158
00:08:48,399 --> 00:08:51,519
これはOSのバージョンが上がるごとに追加されていくので

159
00:08:51,519 --> 00:08:53,399
一回見て満足するのではなくて

160
00:08:53,399 --> 00:08:56,419
OSのバージョンが上がるごとにチェックすることをお勧めします

161
00:08:56,419 --> 00:09:01,639
この中でもダイナミックタイプについて少し深掘ってみようと思います

162
00:09:01,639 --> 00:09:07,460
ダイナミックタイプは比較的最近認知度が上がってきていると思うんですけど

163
00:09:07,460 --> 00:09:11,320
文字のフォントサイズを変更することができるOSの機能です

164
00:09:11,320 --> 00:09:15,460
例えばデフォルトでこれくらいの文字サイズのUIがあったときに

165
00:09:15,460 --> 00:09:19,019
もっと小さい文字がいいよっていう人はもっと文字を小さくできますし

166
00:09:19,019 --> 00:09:21,840
視力が悪い人などもっと文字が大きいよって人は

167
00:09:21,840 --> 00:09:23,980
もっと文字を大きくすることができる機能です

168
00:09:23,980 --> 00:09:28,840
この機能に対応するためには文字サイズをハードコーディングするのではなくて

169
00:09:28,840 --> 00:09:34,720
ちゃんとOSのフォントのサイズダイメージングタイプの設定を確認して変えるなど

170
00:09:34,720 --> 00:09:39,179
もしくはOSが標準で使っているスタイルを使うなど対応が必要です

171
00:09:39,179 --> 00:09:44,460
ただ文字サイズの変更に自動で追従できていればそれでいいのかというと

172
00:09:44,460 --> 00:09:45,919
実はそういうわけではありません

173
00:09:45,919 --> 00:09:51,039
例えばこういうUIで文字サイズを単純に上げてしまうと

174
00:09:51,039 --> 00:09:52,919
このようになってしまいます

175
00:09:52,919 --> 00:09:57,879
これはタイトルが省略されていてタイトルの情報が読み取れませんよね

176
00:09:57,879 --> 00:10:01,179
さらに左の方には変な予約があったりと

177
00:10:01,179 --> 00:10:03,320
ちょっとUIとしても問題がありそうです

178
00:10:03,320 --> 00:10:08,620
このように文字サイズが極端に大きい時っていうのは

179
00:10:08,620 --> 00:10:12,460
必要に応じてレイアウトを変更するということが大事になってきます

180
00:10:12,460 --> 00:10:17,139
これに対応するにはまず先頭の余白部分ですね

181
00:10:17,139 --> 00:10:21,720
ここを埋めるために説明のテキストを左にずらすなど工夫ができそうです

182
00:10:21,720 --> 00:10:25,620
さらに次に右上の日付のテキストですね

183
00:10:25,620 --> 00:10:27,580
これを下の方にずらします

184
00:10:27,580 --> 00:10:32,480
日付のラベルが下に来ることでタイトルの右に余白ができるので

185
00:10:32,480 --> 00:10:35,620
タイトルの内容をすべて表示することができるようになります

186
00:10:35,620 --> 00:10:40,039
このように文字サイズに応じてレイアウトを柔軟に変更することで

187
00:10:40,039 --> 00:10:42,840
必要な情報をユーザーがちゃんと読み取れるようになります

188
00:10:42,840 --> 00:10:47,279
Appleのアプリの場合だとミュージックアプリ、メールアプリ、メッセージアプリなどは

189
00:10:47,279 --> 00:10:50,259
この辺がっつり文字サイズに応じてレイアウトを変えてきているので

190
00:10:50,259 --> 00:10:53,759
この発表のあたりにぜひ皆さん見てみてください

191
00:10:53,759 --> 00:10:58,059
全てのものが文字サイズがAppleのもので変わるかというと変わらないものもあります

192
00:10:58,059 --> 00:11:01,779
タブバーの文字のフォントサイズというのは

193
00:11:01,779 --> 00:11:05,240
ダイナミックタイプでフォントサイズを変えても大きくなりません

194
00:11:05,240 --> 00:11:08,740
じゃあユーザーはここの文字を読み取る方法がないのかというと

195
00:11:08,740 --> 00:11:10,139
別の方法があります

196
00:11:10,139 --> 00:11:13,980
このタブバーの読みたい項目を長押しします

197
00:11:13,980 --> 00:11:16,779
するとこのように画面の真ん中に

198
00:11:16,779 --> 00:11:19,500
そのタブバーに関するテキストとイメージが表示されます

199
00:11:19,500 --> 00:11:23,899
これはiOSのラージコンテンツビューアと呼ばれる機能でして

200
00:11:23,899 --> 00:11:26,600
UIの都合で文字サイズを大きくできないとき

201
00:11:26,600 --> 00:11:32,159
そういう時に長押しすることでその説明と画像を

202
00:11:32,159 --> 00:11:35,940
画面の真ん中に大きく表示することができるというアクセシビリティの機能です

203
00:11:35,940 --> 00:11:41,379
標準のUIだとタブバーナビゲーションバーというのは自動的にこの辺りをサポートしていますが

204
00:11:41,379 --> 00:11:44,059
もし皆さんがカスタムUIを作りたいということであれば

205
00:11:44,059 --> 00:11:47,480
この辺をちゃんと対応するかどうかというのを考える必要があります

206
00:11:47,480 --> 00:11:52,340
せっかくちょっとしたチップスというか便利な話もしておくと

207
00:11:52,340 --> 00:11:55,960
コントロールセンターにテキストサイズというコントロールを置くことで

208
00:11:55,960 --> 00:11:59,200
いつでも簡単にダイナミックタイプの設定を変えられるようになるので

209
00:11:59,200 --> 00:12:01,440
これを置いておくことをお勧めします

210
00:12:01,440 --> 00:12:02,759
僕はこれを常に置いておいて

211
00:12:02,759 --> 00:12:04,440
よく文字サイズをめっちゃ大きくしたり

212
00:12:04,440 --> 00:12:05,740
めっちゃ小さくしたりして

213
00:12:05,740 --> 00:12:07,639
いろんなアプリの挙動を確認しています

214
00:12:07,639 --> 00:12:09,679
WWDCのセッション動画

215
00:12:09,679 --> 00:12:12,000
Get Started with Dynamic Typeでは

216
00:12:12,000 --> 00:12:14,000
この辺りについてさらに掘り下げた内容とかも

217
00:12:14,000 --> 00:12:14,840
喋られているので

218
00:12:14,840 --> 00:12:17,720
ぜひこのセッション動画の後にチェックしてみてください

219
00:12:17,720 --> 00:12:22,200
次にiPadOSについてもどういう点を確認するか見ていきます

220
00:12:22,200 --> 00:12:24,580
iPadOSならではの点として

221
00:12:24,580 --> 00:12:26,580
Windowsのリサイズであったりキーボード

222
00:12:26,580 --> 00:12:29,320
マウス、トラックパッド、Apple Pencilといったものがあります

223
00:12:29,320 --> 00:12:31,379
まずWindowsのリサイズです

224
00:12:31,379 --> 00:12:34,580
どんなWindowsサイズにしても柔軟に適切なレイアウトになるか

225
00:12:34,580 --> 00:12:36,120
というのをちゃんとチェックしてみてください

226
00:12:36,120 --> 00:12:39,019
よくある例として間違った例として

227
00:12:39,019 --> 00:12:40,879
ビューのサイズとかをキャッシュしていて

228
00:12:40,879 --> 00:12:44,039
それがWindowsのサイズとキャッシュのサイズが噛み合わなくて

229
00:12:44,039 --> 00:12:46,500
レイアウトが崩れるというアプリを時々見かけるので

230
00:12:46,500 --> 00:12:49,240
このあたりは注意が必要そうです

231
00:12:49,240 --> 00:12:50,419
キーボードにも

232
00:12:50,419 --> 00:12:52,620
次にキーボードに関しては

233
00:12:52,620 --> 00:12:57,960
キーボードだけである程度快適にそのアプリケーションが操作できるかというのも確認してみてください

234
00:12:57,960 --> 00:13:03,139
特にキーボードショートカットはiPod OS 26から存在感が増しているので

235
00:13:03,139 --> 00:13:05,240
対応できるならした方がいいです

236
00:13:05,240 --> 00:13:08,940
マウス、トラックパッド、Apple Pencilに関しては

237
00:13:08,940 --> 00:13:11,980
ホバーエフェクトが適切かどうかというところもチェックしてみてください

238
00:13:11,980 --> 00:13:16,720
ホバーエフェクトというのはマウスのカーソルをボタンに近づけた時に

239
00:13:16,720 --> 00:13:20,039
ボタンがちょっと浮き上がったり反応したりするといったインタラクションでして

240
00:13:20,039 --> 00:13:22,840
それが適切かどうかというのも確認してみてください

241
00:13:22,840 --> 00:13:25,360
このあたりがちゃんと対応できていると

242
00:13:25,360 --> 00:13:28,200
VisionOSにもし移植しますよとなったときには

243
00:13:28,200 --> 00:13:30,840
しやすさが上がると思います

244
00:13:30,840 --> 00:13:33,679
最後にApple Pencilです

245
00:13:33,679 --> 00:13:36,100
Apple Pencilでは先ほど説明したように

246
00:13:36,100 --> 00:13:39,120
スクリブルという文字を手書きで入力できる機能があります

247
00:13:39,120 --> 00:13:42,539
このスクリブルがちゃんと適切に動作するかどうかというのを

248
00:13:42,539 --> 00:13:43,580
確認してみてください

249
00:13:43,580 --> 00:13:45,500
特に注意する項目として

250
00:13:45,500 --> 00:13:48,399
テキストフィールドに見せかけたボタンというものを

251
00:13:48,399 --> 00:13:50,720
いろんなアプリが置いているんですが

252
00:13:50,720 --> 00:13:52,539
一見テキストフィールドに見えるので

253
00:13:52,539 --> 00:13:54,440
iPadOSでApple Pencil持っていると

254
00:13:54,440 --> 00:13:56,360
そこに直接書こうとしちゃうんですよね

255
00:13:56,360 --> 00:13:58,659
ただそれはボタンなのでテキストフィールドじゃなくて

256
00:13:58,659 --> 00:14:01,779
ボタンなので文字が書けないということが起きてしまい

257
00:14:01,779 --> 00:14:04,519
ユーザーの期待と実際に挙動が違ってしまいます

258
00:14:04,519 --> 00:14:07,559
こういった場合には修正をした方がより良いです

259
00:14:07,559 --> 00:14:12,519
残りの項目に関しても全て重要で等しく説明したいんですけど

260
00:14:12,519 --> 00:14:14,799
今日は時間の都合上省略したいと思います

261
00:14:14,799 --> 00:14:20,480
これら全てに対応して対応しなければならないという話をしたいわけではないんですけど

262
00:14:20,480 --> 00:14:23,100
ビジネス的に対応しないという判断をしたとか

263
00:14:23,100 --> 00:14:28,860
自分たちはリソースが足りなくて対応できていないといった認識を持つことが必要だということを伝えたいです

264
00:14:28,860 --> 00:14:34,639
その判断状況の裏では悲しんでいる人がいるかもしれないということにちゃんと向き合う必要があります

265
00:14:34,639 --> 00:14:42,039
認識できていれば空き時間にちょっとした対応してみるとかそういったことをして改善していく必要があります

266
00:14:42,039 --> 00:14:46,600
一番ダメなのは気づかずにそのままリリースしてしまい放置してしまうことです

267
00:14:46,600 --> 00:14:51,320
エンジニアとしてどこまで対応できていてどこまで対応できていないのかということについては

268
00:14:51,320 --> 00:14:53,019
ちゃんと把握しておく必要があります

269
00:14:53,019 --> 00:14:58,840
ここからはどういう場合にそのカスタムUIを作るべきかということについても

270
00:14:58,840 --> 00:15:01,879
作らないべきかということについても話をしていきたいです

271
00:15:01,879 --> 00:15:07,379
まず最初にナビゲーションコントロールといったものは難易度が非常に高いので避けるべきです

272
00:15:07,379 --> 00:15:09,940
ナビゲーションというのはタブバーとかスプリットビューとか

273
00:15:09,940 --> 00:15:12,139
ナビゲーションコントローラーとかそういったものです

274
00:15:12,139 --> 00:15:14,720
コントローラーはさっき言ったような日付ピッカーであったり

275
00:15:14,720 --> 00:15:17,480
テキストフィールドそういったものは難易度がめちゃくちゃ高いので

276
00:15:17,480 --> 00:15:18,279
避けるべきです

277
00:15:18,279 --> 00:15:21,039
一方でコンポーネント標準のコントロールを

278
00:15:21,039 --> 00:15:23,480
いくつか組み合わせたものというのは問題になりにくいので

279
00:15:23,480 --> 00:15:25,899
この辺りはやってもいいんじゃないかなと思います

280
00:15:25,899 --> 00:15:30,019
次にAndroidの統一だけを目的にした

281
00:15:30,019 --> 00:15:32,440
さっき難易度が高いといったカスタムナビゲーションや

282
00:15:32,440 --> 00:15:34,399
コントロールというのは特に避けた方がいいです

283
00:15:34,399 --> 00:15:37,500
デザインの管理コストが少しマシになるだけで

284
00:15:37,500 --> 00:15:40,899
エンジニアやユーザーにとっては基本的に不利益になることが多いので

285
00:15:40,899 --> 00:15:44,799
統一だけを目的にしたカスタムUIというのはやめたほうがいいです

286
00:15:44,799 --> 00:15:46,100
標準UIを使うべきです

287
00:15:46,100 --> 00:15:51,500
最後にチームの技術力 協業度 プラットフォームへの理解度というのを

288
00:15:51,500 --> 00:15:55,779
総合的に判断して作るか作らないかというのを考えていく必要があります

289
00:15:55,779 --> 00:15:59,899
特にここでは協業度というところに少しフォーカスを当てたいと思います

290
00:15:59,899 --> 00:16:05,759
多くの開発現場の場合 UIデザイナーが静的なデザインに責任があり

291
00:16:05,759 --> 00:16:09,220
エンジニアはその実装に責任があるということが多いと思います

292
00:16:09,220 --> 00:16:13,759
ただその静的なデザインと実装との間にはギャップがあって

293
00:16:13,759 --> 00:16:18,539
アニメーション入力デバイスインタラクションパフォーマンスアクセシビリティローカライゼーション

294
00:16:18,539 --> 00:16:22,679
こういった情報っていうのが結構考慮して実装に落とし込む必要があるんですけど

295
00:16:22,679 --> 00:16:24,879
この辺が結構浮きがちです

296
00:16:24,879 --> 00:16:28,580
例えばアニメーションにしてもその長さはどうするのとか

297
00:16:28,580 --> 00:16:30,940
バウンスはどうしますか初速はどうしますかとか

298
00:16:30,940 --> 00:16:33,600
アニメーションカーブはどのようなカーブにしますかとか

299
00:16:33,600 --> 00:16:36,200
他にもアニメーション中にインタラクションを受け付けますか

300
00:16:36,200 --> 00:16:38,639
受け付けませんかなどを考えることがたくさんあります

301
00:16:38,639 --> 00:16:41,399
この多くはデザイナーが決める必要がありそうですが

302
00:16:41,399 --> 00:16:43,899
アニメーション中にインタラクションを受け付けるかどうかとかは

303
00:16:43,899 --> 00:16:46,240
もしかしたらエンジニアの方がケアした方がいいかもしれません

304
00:16:46,240 --> 00:16:50,240
アクセシビリティにしてもさっき説明したダイナミックタイプを例にすると

305
00:16:50,240 --> 00:16:51,960
じゃあそのスタイルはどうしますかとか

306
00:16:51,960 --> 00:16:53,799
フォントサイズに応じてレイアウト変えますか

307
00:16:53,799 --> 00:16:57,139
ラージコンデンズBは使えますかといったいろんなことを気にする必要があります

308
00:16:57,139 --> 00:17:00,980
デザイナーからするとこの辺はいい感じにやってくれよって感じもありますが

309
00:17:00,980 --> 00:17:04,859
エンジニアからするとこの辺のデザインもしっかり用意してほしいというような気持ちもあります

310
00:17:04,859 --> 00:17:08,980
なのでこの辺の情報っていうのが基本的に責任が曖昧になりがちです

311
00:17:08,980 --> 00:17:12,420
エンジニアが見るべきなのかデザイナーが見るべきなのかっていうのは曖昧です

312
00:17:12,420 --> 00:17:17,519
こういう場合にしっかり境界を引きすぎないということが大事だと個人的には思います

313
00:17:17,519 --> 00:17:22,059
UIデザイナーとエンジニアの間で静的なデザイン以外の情報っていうのは

314
00:17:22,059 --> 00:17:23,799
さっき言った通り浮きがちです

315
00:17:23,799 --> 00:17:28,880
これは個人的にはフィグマなど絵をベースにコミュニケーションしていることの弊害なんじゃないかなと思います

316
00:17:28,880 --> 00:17:36,680
この浮いた情報っていうのはエンジニアデザイナー相互に積極的に拾っていくという必要があります

317
00:17:36,680 --> 00:17:43,579
さらにさっき難易度が高いといったコントロールやナビゲーションに関してカスタムUIを作るよとなった時には

318
00:17:43,579 --> 00:17:46,940
特に密な協業と相互の理解

319
00:17:46,940 --> 00:17:52,039
つまりエンジニアならデザイナーのデザイナーならエンジニアの理解が必要になります

320
00:17:52,039 --> 00:17:55,799
なのでカスタムUIに対して取り組むときには

321
00:17:55,799 --> 00:17:59,940
UIデザイナーとかエンジニアとかそういったロールで線を引くのではなくて

322
00:17:59,940 --> 00:18:03,799
同じクリエイターとして対応を重ねてデザイン実装していくというのが

323
00:18:03,799 --> 00:18:05,559
大事なんじゃないかなというふうに思います

324
00:18:05,559 --> 00:18:08,720
最終的に責任があるのはもちろんデザインに関してはデザイナーだし

325
00:18:08,720 --> 00:18:10,700
エンジニアリングに関してはエンジニアなんですが

326
00:18:10,700 --> 00:18:13,019
そこに対して明確に線を引くのではなく

327
00:18:13,019 --> 00:18:17,759
グラデーションで同じ立場のクリエイターとして取り組むことが大事だと思っています

328
00:18:17,759 --> 00:18:23,119
ところで今我々はUIに関して一つの時代の変わり目にいます

329
00:18:23,119 --> 00:18:25,400
そうですリキッドグラスです

330
00:18:25,400 --> 00:18:30,480
キャリコでも先ほど説明したようにカスタムのナビゲーションバーであったり

331
00:18:30,480 --> 00:18:33,680
カスタムのツールバーといったカスタムUIがたくさんあります

332
00:18:33,680 --> 00:18:37,420
ただこれはもちろんカスタムUIですので

333
00:18:37,420 --> 00:18:43,980
iOS18から26にアップデートしたタイミングで自動的に追従してくれたりはしません

334
00:18:43,980 --> 00:18:47,740
先ほど説明したようにめちゃくちゃ作り込んできたカスタムUIなんですが

335
00:18:47,740 --> 00:18:51,079
デザイン的にもiOS26には合わなさそうです

336
00:18:51,079 --> 00:18:54,460
ということでキャリコではそれらすべてを一旦捨てて

337
00:18:54,460 --> 00:18:57,839
ゼロベースでUIを再度デザインすることを決断しました

338
00:18:57,839 --> 00:19:00,960
いやそれ大変じゃないですかって聞かれたら

339
00:19:00,960 --> 00:19:01,720
はい大変です

340
00:19:01,720 --> 00:19:05,119
ただカスタムUIを作るっていうのはそういうことだというふうに思います

341
00:19:05,119 --> 00:19:07,259
カスタムUIを実装するのも大変

342
00:19:07,259 --> 00:19:08,539
メンテナンスをするのも大変

343
00:19:08,539 --> 00:19:10,599
なのに終了が突然来るということで

344
00:19:10,599 --> 00:19:14,079
楽な時というのは一瞬たりでもないんじゃないかなと思います

345
00:19:14,079 --> 00:19:16,839
なのでカスタムUIを作る時というのは

346
00:19:16,839 --> 00:19:19,759
それ相応の覚悟というものが求められると思います

347
00:19:19,759 --> 00:19:22,599
ということでタイトル回収のまとめです

348
00:19:22,599 --> 00:19:24,539
カスタムUIを作る覚悟として

349
00:19:24,539 --> 00:19:27,720
カスタムUIを作る時標準UIがサポートしてくれていた

350
00:19:27,720 --> 00:19:29,700
アクセシビリティやアニメーションとか

351
00:19:29,700 --> 00:19:31,460
複数プラットフォームの対応とか

352
00:19:31,460 --> 00:19:33,180
いろんなものを始め

353
00:19:33,180 --> 00:19:36,400
それら全てを自分で面倒を見るという覚悟が必要です

354
00:19:36,400 --> 00:19:38,759
UIデザイナーとエンジニア間で

355
00:19:38,759 --> 00:19:41,740
今まで以上に密な協業をする覚悟も必要です

356
00:19:41,740 --> 00:19:44,259
そして作るのも作ってからも大変

357
00:19:44,259 --> 00:19:47,000
その終わりが突然来るということを受け入れなければいけない

358
00:19:47,000 --> 00:19:48,680
その覚悟も求められます

359
00:19:48,680 --> 00:19:52,420
この発表ではエンジニアの人とデザイナーの人が

360
00:19:52,420 --> 00:19:55,640
カスタムUIについて議論する一つのきっかけになればなと思って

361
00:19:55,640 --> 00:19:58,019
あえて技術的な話は一つも入れていません

362
00:19:58,019 --> 00:20:00,559
ぜひ皆さんチームにも持ち帰っていただいて

363
00:20:00,559 --> 00:20:04,900
カスタムUIについて議論するいいきっかけにしてもらえたらなというふうに思っています

364
00:20:04,900 --> 00:20:06,839
ご清聴ありがとうございました

365
00:20:06,839 --> 00:20:10,240
ということでごめんなさい最後に宣伝だけ一つ入れさせてください

366
00:20:10,240 --> 00:20:14,140
今先ほど言ったキャリコというものはテストフライトに向けて

367
00:20:14,140 --> 00:20:15,500
今必死に作っています

368
00:20:15,500 --> 00:20:19,920
https-caricocat.appというところでフォームがあって

369
00:20:19,920 --> 00:20:23,720
このフォームを入力すると皆さんにテストフライトの準備ができたときに

370
00:20:23,720 --> 00:20:25,680
アナウンスのメールを飛ばさせていただきますので

371
00:20:25,680 --> 00:20:28,720
もし興味があるよという人どんだけUI作り込んでいるんだって

372
00:20:28,720 --> 00:20:31,599
興味があるよという人はぜひこれ登録してみてください

373
00:20:31,599 --> 00:20:35,180
あとXをフォローしてくれた方にキャリコステッカーを配っていますので

374
00:20:35,180 --> 00:20:37,519
ぜひフォローしていただいて声かけてくれたら

375
00:20:37,519 --> 00:20:38,980
今日ステッカー持ってきているので

376
00:20:38,980 --> 00:20:41,500
気軽に声かけてください

377
00:20:41,500 --> 00:20:42,640
これで本当に終わりです

378
00:20:42,640 --> 00:20:43,539
ご清聴ありがとうございました

379
00:20:43,539 --> 00:20:50,119
発表ありがとうございました

380
00:20:50,119 --> 00:20:53,599
それではQ&Aに入りたいと思います

381
00:20:53,599 --> 00:20:56,839
コメントや質問のある方は手を挙げてお知らせください

382
00:21:05,180 --> 00:21:14,500
発表ありがとうございます

383
00:21:14,500 --> 00:21:17,099
質問なんですけれども

384
00:21:17,099 --> 00:21:23,279
UIデザイナーとエンジニアが協力して取り組んでいく必要があると

385
00:21:23,279 --> 00:21:25,180
おっしゃっていたと思うんですけれども

386
00:21:25,180 --> 00:21:30,799
デザイナーに対してAppleプラットフォームにはこういうのがある

387
00:21:30,799 --> 00:21:34,339
例えばダイナミックタイプがあるとか

388
00:21:34,339 --> 00:21:41,359
そういったAppleプラットフォームならではの事情を説明する必要があると思うんですけれども

389
00:21:41,359 --> 00:21:45,740
そういった時に使いやすい資料とかってありますかね

390
00:21:45,740 --> 00:21:52,200
やっぱりHuman Interface Guidelineを読むっていうのが大事だったりっていう感じでしょうか

391
00:21:52,200 --> 00:21:56,819
そうですねまずはHuman Interface GuidelineとかそういったAppleが出しているもの

392
00:21:56,819 --> 00:21:58,660
そうですねHuman Interface Guideline

393
00:21:58,660 --> 00:22:01,920
あとデザインに特化したWWDCのセッション動画とかもあるので

394
00:22:01,920 --> 00:22:04,619
デザイナーの人がそういうところを

395
00:22:04,619 --> 00:22:06,339
アンテナ張ってキャッチアップしていることは

396
00:22:06,339 --> 00:22:07,619
そんなに多くないと思うので

397
00:22:07,619 --> 00:22:09,299
この内容であれば

398
00:22:09,299 --> 00:22:12,400
デザイナーの方が理解できるんじゃないかなというものは

399
00:22:12,400 --> 00:22:14,259
積極的に共有していくということが

400
00:22:14,259 --> 00:22:15,640
必要かなと思います

401
00:22:15,640 --> 00:22:19,480
あとは具体的な幅広いものについて

402
00:22:19,480 --> 00:22:22,299
一般化された資料っていうのは

403
00:22:22,299 --> 00:22:24,200
あんまりないんじゃないかなというふうに思っているので

404
00:22:24,200 --> 00:22:26,839
やはりそれは作っていく過程で

405
00:22:26,839 --> 00:22:28,180
タイヤをちゃんと重ねて

406
00:22:28,180 --> 00:22:29,720
ここに関してはこういう

407
00:22:29,720 --> 00:22:31,660
なんていうんですかね

408
00:22:31,660 --> 00:22:33,420
対応とか考慮が必要です

409
00:22:33,420 --> 00:22:35,220
って言っているようなことを伝えていって

410
00:22:35,220 --> 00:22:36,099
相互理解

411
00:22:36,099 --> 00:22:37,640
多分デザイナーの人はデザイナーの人で

412
00:22:37,640 --> 00:22:38,539
いろいろ事情があって

413
00:22:38,539 --> 00:22:39,900
そういったデザインを作っているので

414
00:22:39,900 --> 00:22:43,039
そこに対して一番いい落とし所っていうのを

415
00:22:43,039 --> 00:22:44,059
探っていくことで

416
00:22:44,059 --> 00:22:48,339
チームとして成長できていったらいいんじゃないかな

417
00:22:48,339 --> 00:22:49,079
というふうに思います

418
00:22:49,079 --> 00:22:50,400
ありがとうございます

419
00:22:50,400 --> 00:22:54,339
ありがとうございました

420
00:22:54,339 --> 00:22:57,180
他にコメントやご質問のある方は

421
00:22:57,180 --> 00:22:58,220
挙手をお願いします

422
00:22:58,220 --> 00:23:08,299
いらっしゃいませんかね

423
00:23:08,299 --> 00:23:13,759
真ん中の方お願いいたします

424
00:23:13,759 --> 00:23:19,220
発表ありがとうございました面白かったです

425
00:23:19,220 --> 00:23:24,660
質問としてはさっきの文字のダイナミックタイプの話で

426
00:23:24,660 --> 00:23:28,539
サイズによってデザインを変えるっていうのがあったと思ったんですけど

427
00:23:28,539 --> 00:23:31,160
Appleがやっているとはいえ

428
00:23:31,160 --> 00:23:34,799
普通のアプリがこれをやるのは結構コストかなと思っていて

429
00:23:34,799 --> 00:23:39,200
どういった話し合いがあってこれをやるに至ったのかが気になったのと

430
00:23:39,200 --> 00:23:41,599
2つ目にダイナミックタイプ

431
00:23:41,599 --> 00:23:45,140
どのサイズによってデザインを変えるみたいなデザインシステムが

432
00:23:45,140 --> 00:23:47,779
デザイナーとして用意されているのかが気になりました

433
00:23:47,779 --> 00:23:51,160
まずここに関して言うと

434
00:23:51,160 --> 00:23:51,579
ごめんなさい

435
00:23:51,579 --> 00:23:54,059
さっき言った通りなんですけど

436
00:23:54,059 --> 00:23:57,660
実はキャリコもこれら全てが全部完璧にできてるかというと

437
00:23:57,660 --> 00:23:58,960
そういうわけではなくて

438
00:23:58,960 --> 00:24:00,900
まだまだ対応できてないところがあるので

439
00:24:00,900 --> 00:24:03,460
さっきみたいなところっていうのはまだできてないところもあるんですけど

440
00:24:03,460 --> 00:24:07,079
ちゃんとやっていかなければいけないという認識はチームとして持っています

441
00:24:07,079 --> 00:24:12,339
これに対してまとまったデザインシステムみたいなものがあるか

442
00:24:12,339 --> 00:24:13,640
っていうことだったと思うんですけど

443
00:24:13,640 --> 00:24:15,119
確か僕の記憶があっていれば

444
00:24:15,119 --> 00:24:18,819
ちゃんとHuman Interface Guidelineのタイポグラフィーかどこかのセクションで

445
00:24:18,819 --> 00:24:21,920
ちゃんとこれらのサイズに応じて

446
00:24:21,920 --> 00:24:23,619
どれくらいのフォントサイズになっているかとか

447
00:24:23,619 --> 00:24:26,900
そういったことについてはちゃんと資料としてまとまっていたはずですし

448
00:24:26,900 --> 00:24:30,099
ちょっとスケッチとかFigmaの中までは見れてないんですけど

449
00:24:30,099 --> 00:24:34,339
多分そのあたりでもある程度カバーされてるんじゃないかなというふうに予想しています

450
00:24:34,339 --> 00:24:35,259
ありがとうございます

451
00:24:35,259 --> 00:24:38,799
ありがとうございました

452
00:24:38,799 --> 00:24:40,559
他にコメントやご質問

453
00:24:51,279 --> 00:24:57,519
スイフトUIでカスタムのビューを作るのって結構制限が多いイメージで

454
00:24:57,519 --> 00:25:02,819
実際にやられているのはUIキットの世界で作られている

455
00:25:02,819 --> 00:25:03,720
はいそうです

456
00:25:03,720 --> 00:25:05,299
スイフトUIだと外れること

457
00:25:05,299 --> 00:25:08,980
ちょっと標準から外れるというのはかなり一気に難易度があるので

458
00:25:08,980 --> 00:25:12,220
先ほど見ていただいたものは全てUIキットで作っています

459
00:25:12,220 --> 00:25:13,000
ありがとうございます

460
00:25:13,000 --> 00:25:18,279
ありがとうございました

461
00:25:18,279 --> 00:25:21,680
他にコメントやご質問のある方挙手をお願いいたします

462
00:25:21,680 --> 00:25:25,339
よろしいでしょうか

463
00:25:25,339 --> 00:25:29,880
ではQ&Aを終わらせて終了とさせていただきます

464
00:25:29,880 --> 00:25:34,759
続いて1分間フィードバックのお時間になります

465
00:25:34,759 --> 00:25:40,339
1分間フィードバックのお時間です

466
00:25:40,339 --> 00:25:45,299
スクリーンのQRコードを読み取ってフィードバックを送ってください

467
00:25:48,279 --> 00:26:18,259
ご視聴ありがとうございました

468
00:26:18,279 --> 00:26:39,539
この後4階展示ルーム前でアスキュタスピーカーを実施します

469
00:26:39,539 --> 00:26:42,059
質問がある方や感想をいただき

470
00:26:42,059 --> 00:26:44,660
お伝えしたい方はぜひご参加ください

471
00:26:44,660 --> 00:26:48,259
それでは松木さんありがとうございました

472
00:26:48,279 --> 00:26:49,279
ありがとうございました。

